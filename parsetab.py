
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'inicioAND ASTERISCO BOOL CADENA CARACTER CHAR DIAGONAL DIFERENTE DIVISION DOBLE ENTERO FALSE FLOAT64 ID IGUAL IGUALIGUAL INT64 LLAVESA LLAVESC MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS NOT NOTHING OR PARENTESISA PARENTESISC PORCENTAJE POTENCIA PRINT PRINTLN PUNTOCOMA STRING STRUCT TRUE ignore_COMENTARIOMULTILINEA ignore_COMENTARIOUNILINEAinicio : instruccionesfininstr : PUNTOCOMAinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : imprimir_instr fininstrinstruccion : error fininstrimprimir_instr : PRINT PARENTESISA expresion PARENTESISCimprimir_instr : PRINTLN PARENTESISA expresion PARENTESISCexpresion : CADENAexpresion : CARACTERexpresion : ENTEROexpresion : DOBLEexpresion : NOTHINGexpresion : banderaexpresion : expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion ASTERISCO expresion\n                 | expresion DIVISION expresion\n                 | expresion POTENCIA expresion\n                 | expresion PORCENTAJE expresionbandera : TRUE\n               | FALSE'
    
_lr_action_items = {'error':([0,2,3,8,9,10,11,],[5,5,-4,-3,-5,-2,-6,]),'PRINT':([0,2,3,8,9,10,11,],[6,6,-4,-3,-5,-2,-6,]),'PRINTLN':([0,2,3,8,9,10,11,],[7,7,-4,-3,-5,-2,-6,]),'$end':([1,2,3,8,9,10,11,],[0,-1,-4,-3,-5,-2,-6,]),'PUNTOCOMA':([4,5,24,31,],[10,10,-7,-8,]),'PARENTESISA':([6,7,],[12,13,]),'CADENA':([12,13,25,26,27,28,29,30,],[15,15,15,15,15,15,15,15,]),'CARACTER':([12,13,25,26,27,28,29,30,],[16,16,16,16,16,16,16,16,]),'ENTERO':([12,13,25,26,27,28,29,30,],[17,17,17,17,17,17,17,17,]),'DOBLE':([12,13,25,26,27,28,29,30,],[18,18,18,18,18,18,18,18,]),'NOTHING':([12,13,25,26,27,28,29,30,],[19,19,19,19,19,19,19,19,]),'TRUE':([12,13,25,26,27,28,29,30,],[21,21,21,21,21,21,21,21,]),'FALSE':([12,13,25,26,27,28,29,30,],[22,22,22,22,22,22,22,22,]),'PARENTESISC':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[24,-9,-10,-11,-12,-13,-14,-21,-22,31,-15,-16,-17,-18,-19,-20,]),'MAS':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[25,-9,-10,-11,-12,-13,-14,-21,-22,25,25,25,25,25,25,25,]),'MENOS':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[26,-9,-10,-11,-12,-13,-14,-21,-22,26,26,26,26,26,26,26,]),'ASTERISCO':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[27,-9,-10,-11,-12,-13,-14,-21,-22,27,27,27,27,27,27,27,]),'DIVISION':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[28,-9,-10,-11,-12,-13,-14,-21,-22,28,28,28,28,28,28,28,]),'POTENCIA':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[29,-9,-10,-11,-12,-13,-14,-21,-22,29,29,29,29,29,29,29,]),'PORCENTAJE':([14,15,16,17,18,19,20,21,22,23,32,33,34,35,36,37,],[30,-9,-10,-11,-12,-13,-14,-21,-22,30,30,30,30,30,30,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,8,]),'imprimir_instr':([0,2,],[4,4,]),'fininstr':([4,5,],[9,11,]),'expresion':([12,13,25,26,27,28,29,30,],[14,23,32,33,34,35,36,37,]),'bandera':([12,13,25,26,27,28,29,30,],[20,20,20,20,20,20,20,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','grammar.py',168),
  ('fininstr -> PUNTOCOMA','fininstr',1,'p_fininstr','grammar.py',173),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','grammar.py',177),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',183),
  ('instruccion -> imprimir_instr fininstr','instruccion',2,'p_instruccion','grammar.py',191),
  ('instruccion -> error fininstr','instruccion',2,'p_instruccion_error','grammar.py',195),
  ('imprimir_instr -> PRINT PARENTESISA expresion PARENTESISC','imprimir_instr',4,'p_imprimir','grammar.py',201),
  ('imprimir_instr -> PRINTLN PARENTESISA expresion PARENTESISC','imprimir_instr',4,'p_imprimirln','grammar.py',205),
  ('expresion -> CADENA','expresion',1,'p_expresion_string','grammar.py',210),
  ('expresion -> CARACTER','expresion',1,'p_expresion_character','grammar.py',214),
  ('expresion -> ENTERO','expresion',1,'p_expresion_integer','grammar.py',218),
  ('expresion -> DOBLE','expresion',1,'p_expresion_double','grammar.py',222),
  ('expresion -> NOTHING','expresion',1,'p_expresion_nothing','grammar.py',226),
  ('expresion -> bandera','expresion',1,'p_expresion_boolean','grammar.py',230),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',234),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',235),
  ('expresion -> expresion ASTERISCO expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',236),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',237),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',238),
  ('expresion -> expresion PORCENTAJE expresion','expresion',3,'p_expresion_binaria_aritmetica','grammar.py',239),
  ('bandera -> TRUE','bandera',1,'p_bandera','grammar.py',257),
  ('bandera -> FALSE','bandera',1,'p_bandera','grammar.py',258),
]
